{"version":3,"sources":["reportWebVitals.js","components/types/types.js","components/reducers/notesReducer.js","components/reducers/uiReducer.js","components/store/store.js","components/reducers/authReducer.js","components/firebase/firebase-config.js","helpers/fileUpload.js","helpers/loadNotes.js","components/actions/notes.js","components/hooks/useForm.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","components/actions/ui.js","components/actions/auth.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/journal/JournalScreen.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","JournalApp.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","types","initialState","loading","msError","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","reducers","combineReducers","auth","state","action","type","uid","payload","name","displayName","ui","notes","active","map","note","id","filter","store","createStore","applyMiddleware","thunk","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleAuthProvider","GoogleAuthProvider","fileUpload","file","a","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","loadNotes","collection","get","noteSanp","forEach","snapHijo","push","data","activeNote","addNewNote","startLoadingNotes","dispatch","setNotes","startSaveNote","getState","url","noteToFirestore","doc","update","refreshNote","Swal","fire","title","deleteNote","useForm","useState","values","setValues","reset","newformState","handleInputChange","target","value","NotesAppBar","useDispatch","useSelector","className","style","display","onChange","e","files","text","allowOutsideClick","onBeforeOpen","showLoading","fileUrl","close","startUploading","onClick","document","querySelector","click","NoteScreen","formValues","activeId","useRef","useEffect","current","placeholder","autoComplete","src","alt","class","delete","starDeleting","NothingSelected","setError","err","finishLoading","startLoginEmailPassword","email","password","signInWithEmailAndPassword","user","login","catch","message","logout","JournalEntry","date","noteDate","moment","backgroundSize","backgroundImage","format","JournalEntries","Sidebar","signOut","newNote","Date","getTime","add","JournalScreen","LoginScreen","onSubmit","preventDefault","disabled","signInWithPopup","to","RegisterScreen","password2","isFormValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","updateProfile","console","log","startRegisterWithEmailPasswordName","AuthRouter","exact","path","component","PrivateRoute","isAuthenticated","Component","rest","props","PublicRoute","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","JournalApp","ReactDOM","render","getElementById"],"mappings":"2KAYeA,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,uBCNDQ,EACF,eADEA,EAED,gBAFCA,EAIG,iBAJHA,EAKM,oBALNA,EAOO,qBAPPA,EAQQ,sBARRA,EAUI,mBAVJA,EAWI,0BAXJA,EAYE,qBAZFA,EAaK,4BAbLA,EAeI,sBAfJA,EAgBY,0B,eCfnBC,EAAe,GCAfA,EAAe,CACjBC,SAAS,EACTC,QAAS,MCMPC,EAAsC,qBAAXC,QAA0BA,OAAOC,sCADlD,KAKVC,EAAWC,YAAgB,CAC7BC,KCbuB,WAA4B,IAA1BC,EAAyB,uDAAjB,GAAKC,EAAY,uCAClD,OAASA,EAAOC,MACZ,KAAKZ,EACD,MAAO,CACHa,IAAKF,EAAOG,QAAQD,IACpBE,KAAMJ,EAAOG,QAAQE,aAG7B,KAAKhB,EACD,MAAO,GAEX,QACI,OAAOU,IDEfO,GDTqB,WAAmC,IAAjCP,EAAgC,uDAAzBT,EAAcU,EAAW,uCAEvD,OAASA,EAAOC,MACZ,KAAKZ,EACD,OAAO,2BACAU,GADP,IAEIP,QAASQ,EAAOG,UAExB,KAAKd,EACD,OAAO,2BACAU,GADP,IAEIP,QAAS,OAGjB,KAAKH,EACD,OAAO,2BACAU,GADP,IAEIR,SAAS,IAGjB,KAAKF,EACD,OAAO,2BACAU,GADP,IAEIR,SAAS,IAEjB,QACI,OAAOQ,IChBfQ,MFVwB,WAAoC,IAAlCR,EAAiC,uDAAzBT,EAAcU,EAAW,uCAE3D,OAASA,EAAOC,MACZ,KAAKZ,EACD,OAAO,2BACAU,GADP,IAEIS,OAAO,eACAR,EAAOG,WAItB,KAAKd,EACD,OAAO,2BACAU,GADP,IAEIQ,MAAM,CAAEP,EAAOG,SAAV,mBAAsBJ,EAAMQ,UAEzC,KAAKlB,EACD,OAAO,2BACAU,GADP,IAEIQ,MAAM,YAAMP,EAAOG,WAG3B,KAAKd,EACD,OAAO,2BACAU,GADP,IAEIQ,MAAOR,EAAMQ,MAAME,KACf,SAAAC,GAAI,OAAIA,EAAKC,KAAOX,EAAOG,QAAQQ,GACjCX,EAAOG,QAAQO,KAChBA,OAGb,KAAKrB,EACD,OAAO,2BACAU,GADP,IAEIS,OAAQ,KACRD,MAAOR,EAAMQ,MAAMK,QAAQ,SAAAF,GAAI,OAAIA,EAAKC,KAAOX,EAAOG,aAG9D,KAAKd,EACD,OAAO,2BACAU,GADP,IAEIS,OAAQ,KACRD,MAAO,KAEf,QACI,OAAOR,MEhCNc,EAAQC,YACjBlB,EACAH,EACIsB,YAAiBC,O,qEEVvBC,IAASC,cATY,CACnBC,OAAQ,0CACRC,WAAY,kCACZC,UAAW,kBACXC,cAAe,8BACfC,kBAAmB,eACnBC,MAAO,8CAMX,IAAMC,EAAKR,IAASS,YACdC,EAAqB,IAAIV,IAASnB,KAAK8B,mB,iBCjBhCC,EAAU,uCAAG,WAAQC,GAAR,mBAAAC,EAAA,4DACL,qDACXC,EAAY,IAAIC,UACbC,OAAO,gBAAgB,iBAChCF,EAASE,OAAO,OAAOJ,GAJD,kBAOCK,MANN,oDAMsB,CAC/BC,OAAQ,OACRC,KAAML,IATQ,YAOZM,EAPY,QAYRC,GAZQ,kCAaUD,EAAKE,OAbf,eAaRC,EAbQ,yBAcPA,EAAUC,YAdH,iCAgBP,MAhBO,+HAAH,sDCGVC,EAAS,uCAAG,WAAOzC,GAAP,iBAAA6B,EAAA,sEACCN,EAAGmB,WAAH,UAAkB1C,EAAlB,mBAAwC2C,MADzC,cAChBC,EADgB,OAGhBvC,EAAQ,GAEduC,EAASC,SAAS,SAAAC,GACjBzC,EAAM0C,KAAN,aACItC,GAAIqC,EAASrC,IACVqC,EAASE,YARK,kBAYf3C,GAZe,2CAAH,sDCoBT4C,EAAa,SAACxC,EAAGD,GAAJ,MAAc,CACpCT,KAAMZ,EACNc,QAAQ,aACJQ,MACGD,KAIE0C,EAAa,SAAEzC,EAAID,GAAN,MAAiB,CACvCT,KAAMZ,EACNc,QAAQ,aACJQ,MAAOD,KAIF2C,EAAoB,SAAEnD,GAC/B,8CAAO,WAAQoD,GAAR,eAAAvB,EAAA,sEACiBY,EAAUzC,GAD3B,OACGK,EADH,OAEH+C,EAAWC,EAAUhD,IAFlB,2CAAP,uDAMSgD,EAAW,SAAEhD,GAAF,MAAc,CAClCN,KAAMZ,EACNc,QAASI,IAGAiD,EAAgB,SAAE9C,GAC3B,8CAAO,WAAQ4C,EAAUG,GAAlB,iBAAA1B,EAAA,6DACK7B,EAAQuD,IAAW3D,KAAnBI,IACFQ,EAAKgD,YACAhD,EAAKgD,WAGVC,EANH,eAM0BjD,IAENC,GARpB,SAUGc,EAAGmC,IAAH,UAAW1D,EAAX,0BAAkCQ,EAAKC,KAAOkD,OAAQF,GAVzD,OAYHL,EAASQ,EAAapD,EAAKC,GAAIgD,IAE/BI,IAAKC,KAAK,QAAQtD,EAAKuD,MAAM,WAd1B,2CAAP,yDAkBSH,EAAc,SAAEnD,EAAGD,GAAL,MAAgB,CACvCT,KAAMZ,EACNc,QAAS,CACLQ,KACAD,KAAK,aACDC,MACGD,MAoCFwD,EAAa,SAAEvD,GAAF,MAAW,CACjCV,KAAMZ,EACNc,QAASQ,I,QC/GAwD,EAAU,WAAwB,IAAvB7E,EAAsB,uDAAP,GAEnC,EAA4B8E,mBAAS9E,GAArC,mBAAO+E,EAAP,KAAeC,EAAf,KAEMC,EAAQ,WAAoC,IAAlCC,EAAiC,uDAAlBlF,EAC3BgF,EAAWE,IAGTC,EAAoB,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACxBJ,EAAU,2BACHD,GADE,kBAEJK,EAAOtE,KAAOsE,EAAOC,UAI9B,MAAO,CAACN,EAAQI,EAAkBF,I,OCZzBK,EAAc,WAEvB,IAAMtB,EAAWuB,cACTrE,EAAWsE,aAAY,SAAA/E,GAAK,OAAIA,EAAMQ,SAAtCC,OAiBR,OACI,sBAAKuE,UAAU,gBAAf,UACI,wDAEA,uBAAO9E,KAAK,OACZU,GAAG,eACHP,KAAK,OACL4E,MAAO,CAACC,QAAQ,QAChBC,SAfiB,SAAEC,GACvB,IAAMrD,EAAOqD,EAAET,OAAOU,MAAM,GACxBtD,GACAwB,EF2DkB,SAAExB,GAC5B,8CAAO,WAAQwB,EAAUG,GAAlB,iBAAA1B,EAAA,6DACWoB,EAAcM,IAAWlD,MAAhCC,OAEPuD,IAAKC,KAAK,CACNC,MAAM,eACNoB,KAAM,gBACNC,mBAAmB,EACnBC,aAAc,WACVxB,IAAKyB,iBARV,SAYmB3D,EAAYC,GAZ/B,OAYG2D,EAZH,OAaHtC,EAAWO,IAAM+B,EACjBnC,EAAUE,EAAeL,IAEzBY,IAAK2B,QAhBF,2CAAP,wDE5DiBC,CAAgB7D,OAczB,gCACI,wBAAQiD,UAAU,MAClBa,QAvBe,WACvBC,SAASC,cAAc,iBAAiBC,SAqBhC,qBAKA,wBAAQhB,UAAU,MAClBa,QAhCO,WACftC,EAAUE,EAAehD,KA8BjB,yBChCHwF,EAAa,WAEtB,IAAM1C,EAAWuB,cAEFnE,EAASoE,aAAY,SAAA/E,GAAK,OAAIA,EAAMQ,SAA3CC,OAER,EAAgD2D,EAASzD,GAAzD,mBAAOuF,EAAP,KAAmBxB,EAAnB,KAAsCF,EAAtC,KACQlC,EAAoB4D,EAApB5D,KAAO4B,EAAagC,EAAbhC,MAAMtD,EAAOsF,EAAPtF,GAEfuF,EAAWC,iBAAQzF,EAAKC,IAC9ByF,qBAAU,WAED1F,EAAKC,KAAOuF,EAASG,UACtB9B,EAAO7D,GACPwF,EAASG,QAAU3F,EAAKC,MAG7B,CAAED,EAAM6D,IAEX6B,qBAAU,WAEN9C,EAAUH,EAAW8C,EAAWtF,GAAZ,eAAqBsF,OAE1C,CAAEA,EAAa3C,IAMlB,OACI,sBAAKyB,UAAU,sBAAf,UAEI,cAAC,EAAD,IAEA,sBAAKA,UAAU,iBAAf,UACI,uBAAO9E,KAAK,OACZqG,YAAY,qBACZvB,UAAU,qBACVwB,aAAa,MACb5B,MAAQV,EACRiB,SAAWT,EACXrE,KAAK,UAEL,0BACAkG,YAAY,qBACZvB,UAAU,kBACVJ,MAAQtC,EACRjC,KAAK,OACL8E,SAAWT,IAKL/D,EAAKgD,KAEN,qBAAKqB,UAAU,eAAf,SACD,qBAAKyB,IAAM9F,EAAKgD,IAAM+C,IAAI,eAIlC,wBAAQC,MAAM,iBACdd,QApCY,WAChBtC,EHkEoB,SAAE3C,GAC1B,8CAAO,WAAQ2C,EAAUG,GAAlB,eAAA1B,EAAA,6DAEG7B,EAAMuD,IAAW3D,KAAKI,IAFzB,SAGGuB,EAAGmC,IAAH,UAAW1D,EAAX,0BAAkCS,IAAOgG,SAH5C,OAKHrD,EAAUY,EAAYvD,IALnB,2CAAP,wDGnEciG,CAAcjG,KAkCpB,wBCnECkG,GAAkB,WAC3B,OACI,sBAAK9B,UAAU,wBAAf,UACI,iDAEI,uBAFJ,yBAMA,mBAAGA,UAAU,+BCTZ+B,GAAW,SAAEC,GAAF,MAAY,CAChC9G,KAAMZ,EACNc,QAAS4G,IAUAC,GAAgB,iBAAO,CAChC/G,KAAMZ,ICTG4H,GAA0B,SAAEC,EAAOC,GAC5C,OAAQ,SAAE7D,GAENA,EDE2B,CAC/BrD,KAAMZ,ICDF4B,IAASnB,OAAOsH,2BAA2BF,EAAOC,GAAUpI,MAAK,YAAgB,IAAZsI,EAAW,EAAXA,KACjE/D,EACIgE,GAAMD,EAAKnH,IAAKmH,EAAKhH,cAGzBiD,EAAU0D,SAEjBO,OAAO,SAAApC,GACJ7B,EAAU0D,MACVjD,IAAKC,KAAK,QAASmB,EAAEqC,QAAQ,cAiCxBF,GAAQ,SAACpH,EAAKG,GAAN,MAAuB,CACpCJ,KAAMZ,EACNc,QAAS,CACLD,MACAG,iBAcCoH,GAAS,iBAAO,CACzBxH,KAAMZ,I,oBCnEGqI,GAAe,SAAC,GAA8B,IAA7B/G,EAA4B,EAA5BA,GAAGgH,EAAyB,EAAzBA,KAAK1D,EAAoB,EAApBA,MAAM5B,EAAc,EAAdA,KAAKqB,EAAS,EAATA,IAEvCkE,EAAWC,KAAOF,GAClBrE,EAAWuB,cAQjB,OACI,sBAAKE,UAAU,yBACfa,QARoB,WACpBtC,EAAUH,EAAWxC,EAAG,CACpBgH,OAAK1D,QAAM5B,OAAKqB,UAKpB,UAGQA,GACA,qBAAKqB,UAAU,yBACXC,MAAO,CACP8C,eAAe,QACfC,gBAAgB,OAAD,OAAUrE,EAAV,QAMvB,sBAAKqB,UAAU,sBAAf,UACI,mBAAGA,UAAU,sBAAb,SACMd,IAEN,mBAAGc,UAAU,wBAAb,SACM1C,OAIV,sBAAK0C,UAAU,0BAAf,UACI,+BAAQ6C,EAASI,OAAO,UACxB,6BAAMJ,EAASI,OAAO,eCrCzBC,GAAiB,WAE1B,IAAQ1H,EAAUuE,aAAY,SAAA/E,GAAK,OAAIA,EAAMQ,SAArCA,MAGR,OACI,qBAAKwE,UAAU,mBAAf,SAGQxE,EAAME,KAAK,SAAAC,GAAI,OACX,cAAC,GAAD,eAEIA,GADGA,EAAKC,UCTnBuH,GAAU,WAGnB,IAAM5E,EAAWuB,cACTzE,EAAS0E,aAAY,SAAA/E,GAAK,OAAIA,EAAMD,QAApCM,KAWR,OACI,wBAAO2E,UAAU,mBAAjB,UACI,sBAAKA,UAAU,0BAAf,UACI,qBAAIA,UAAU,OAAd,UACI,mBAAGA,UAAU,gBACb,qCAAS3E,EAAT,UAGJ,wBAAQ2E,UAAU,MAClBa,QAlBS,WACjBtC,EHkDJ,uCAAO,WAAOA,GAAP,SAAAvB,EAAA,sEACGd,IAASnB,OAAOqI,UADnB,OAGH7E,EAAUmE,MACVnE,ENiDyB,CAC7BrD,KAAMZ,IMtDC,2CAAP,wDGlCY,uBAMJ,sBAAK0F,UAAU,qBACfa,QAnBa,WACjBtC,ETXJ,uCAAO,WAAOA,EAAUG,GAAjB,mBAAA1B,EAAA,6DACG7B,EAAMuD,IAAY3D,KAAKI,IAEvBkI,EAAU,CACZnE,MAAO,GACP5B,KAAM,GACNsF,MAAM,IAAIU,MAAOC,WANlB,SASe7G,EAAGmB,WAAH,UAAkB1C,EAAlB,mBAAuCqI,IAAKH,GAT3D,OASGxE,EATH,OAWHN,EAAUH,EAAWS,EAAIjD,GAAIyH,IAC7B9E,EAAUF,EAAWQ,EAAIjD,GAAIyH,IAZ1B,2CAAP,0DS4BQ,UAEI,mBAAGrD,UAAU,+BACb,mBAAGA,UAAU,OAAb,0BAGJ,cAAC,GAAD,QCnCCyD,GAAgB,WAEzB,IAAQhI,EAAWsE,aAAY,SAAA/E,GAAK,OAAIA,EAAMQ,SAAtCC,OAGR,OACI,sBAAKuE,UAAU,0EAAf,UACI,cAAC,GAAD,IAEA,+BAEUvE,EACG,cAAC,EAAD,IACD,cAAC,GAAD,UCZXiI,GAAc,WAEzB,IAAMnF,EAAWuB,cAETtF,EAAYuF,aAAa,SAAA/E,GAAK,OAAIA,EAAMO,MAAxCf,QAER,EAA0C4E,EAAQ,CAChD+C,MAAO,iBACPC,SAAU,WAFZ,mBAAQlB,EAAR,KAAoBxB,EAApB,KAKQyC,EAAoBjB,EAApBiB,MAAOC,EAAalB,EAAbkB,SAWf,OACE,qCACE,oBAAIpC,UAAU,cAAd,mBACA,uBAAM2D,SAZU,SAAEvD,GACpBA,EAAEwD,iBACFrF,EAAU2D,GAAwBC,EAAMC,KAWtCpC,UAAU,oDADV,UAEE,uBAAO9E,KAAK,OAAOqG,YAAY,QAAQlG,KAAK,QAAQ2E,UAAU,cAAcwB,aAAa,MACzF5B,MAAQuC,EACRhC,SAAWT,IAEX,uBAAOxE,KAAK,WAAWqG,YAAY,WAAWlG,KAAK,WAAW2E,UAAU,cACxEwB,aAAa,MACb5B,MAAQwC,EACRjC,SAAWT,IAEX,wBAAQxE,KAAK,SAAS8E,UAAU,4BAA4B6D,SAAWrJ,EAAvE,mBAGA,sBAAKwF,UAAU,wBAAf,UACE,2DACA,sBAAKA,UAAU,aAAaa,QAvBV,WACxBtC,GLgBO,SAAEA,GAELrC,IAASnB,OAAO+I,gBAAiBlH,GAChC5C,MAAM,YAAa,IAAXsI,EAAU,EAAVA,KACL/D,EACIgE,GAAMD,EAAKnH,IAAKmH,EAAKhH,qBKC3B,UACE,qBAAK0E,UAAU,sBAAf,SACE,qBACEA,UAAU,cACVyB,IAAI,8EACJC,IAAI,oBAGR,mBAAG1B,UAAU,WAAb,SACE,4DAKN,cAAC,IAAD,CACA+D,GAAG,iBACH/D,UAAU,OAFV,uC,oBCpDKgE,GAAiB,WAE5B,IAAMzF,EAAWuB,cACTrF,EAAYsF,aAAa,SAAA/E,GAAK,OAAIA,EAAMO,MAAxCd,QAGR,EAA0C2E,EAAQ,CAChD/D,KAAM,OACN8G,MAAO,iBACPC,SAAU,SACV6B,UAAW,WAJb,mBAAQ/C,EAAR,KAAmBxB,EAAnB,KAOQrE,EAAqC6F,EAArC7F,KAAM8G,EAA+BjB,EAA/BiB,MAAOC,EAAwBlB,EAAxBkB,SAAU6B,EAAc/C,EAAd+C,UASzBC,EAAc,WAElB,OAA4B,IAAvB7I,EAAK8I,OAAOC,QACf7F,EAAUwD,GAAS,sBACZ,GACIsC,KAAUC,QAASnC,GAGrBC,IAAa6B,GAAa7B,EAASgC,OAAS,GACrD7F,EAAUwD,GAAS,6CACZ,IAETxD,EPrC+B,CAC/BrD,KAAMZ,KOqCC,IAPHiE,EAAUwD,GAAS,qBACZ,IASX,OACI,qCACF,oBAAI/B,UAAU,cAAd,sBACA,uBAAM2D,SA1BW,SAACvD,GACpBA,EAAEwD,iBACGM,KACH3F,ENJ4C,SAAE4D,EAAOC,EAAU/G,GACjE,OAAO,SAAEkD,GACLrC,IAASnB,OAAOwJ,+BAAgCpC,EAAOC,GAAUpI,KAAjE,uCAAsE,6BAAAgD,EAAA,6DAAQsF,EAAR,EAAQA,KAAR,SAC5DA,EAAKkC,cAAc,CAAElJ,YAAaD,IAD0B,OAElEoJ,QAAQC,IAAIpC,GACZ/D,EACIgE,GAAMD,EAAKnH,IAAKmH,EAAKhH,cAJyC,2CAAtE,uDAOCkH,OAAO,SAAApC,GACJpB,IAAKC,KAAK,QAASmB,EAAEqC,QAAQ,aMN1BkC,CAAmCxC,EAAOC,EAAU/G,KAwB5D2E,UAAU,oDADX,UAGIvF,GACC,qBAAKuF,UAAU,oBAAf,SACCvF,IAKJ,uBAAOS,KAAK,OAAOqG,YAAY,OAAOlG,KAAK,OAAO2E,UAAU,cAAcwB,aAAa,MAAM5B,MAAQvE,EAAO8E,SAAWT,IAEvH,uBAAOxE,KAAK,OAAOqG,YAAY,QAAQlG,KAAK,QAAQ2E,UAAU,cAAcwB,aAAa,MAAM5B,MAAQuC,EAAQhC,SAAWT,IAE1H,uBAAOxE,KAAK,WAAWqG,YAAY,WAAWlG,KAAK,WAAW2E,UAAU,cACxEwB,aAAa,MAAM5B,MAAQwC,EAAWjC,SAAWT,IAEjD,uBAAOxE,KAAK,WAAWqG,YAAY,UAAUlG,KAAK,YAAY2E,UAAU,cACxEwB,aAAa,MAAM5B,MAAQqE,EAAY9D,SAAWT,IAElD,wBAAQxE,KAAK,SAAS8E,UAAU,iCAAiC6D,UAAW,EAA5E,sBAIA,cAAC,IAAD,CACAE,GAAG,cACH/D,UAAU,OAFV,qCCtEK4E,GAAa,WACtB,OACI,qBAAK5E,UAAU,aAAf,SACI,qBAAKA,UAAU,sBAAf,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAO6E,OAAK,EAACC,KAAK,cAAcC,UAAYrB,KAC5C,cAAC,IAAD,CAAOmB,OAAK,EAACC,KAAK,iBAAiBC,UAAYf,KAEnD,cAAC,IAAD,CAAUD,GAAG,wB,4CCThBiB,GAAe,SAAC,GAItB,IAHHC,EAGE,EAHFA,gBACWC,EAET,EAFFH,UACGI,EACD,mBAGF,OACI,cAAC,IAAD,2BAAYA,GAAZ,IACIJ,UAAa,SAAEK,GAAF,OACPH,EACK,cAACC,EAAD,eAAiBE,IAChB,cAAC,IAAD,CAAUrB,GAAG,qB,mCCZxBsB,GAAc,SAAC,GAIrB,IAHHJ,EAGE,EAHFA,gBACWC,EAET,EAFFH,UACGI,EACD,mBACF,OACI,cAAC,IAAD,2BAAYA,GAAZ,IACAJ,UAAa,SAAEK,GAAF,OACPH,EACE,cAAC,IAAD,CAAUlB,GAAG,MACd,cAACmB,EAAD,eAAiBE,SCKnBE,GAAY,WAEvB,IAAM/G,EAAWuB,cAEjB,EAAgCT,oBAAS,GAAzC,mBAAOkG,EAAP,KAAiBC,EAAjB,KACA,EAAoCnG,oBAAS,GAA7C,mBAAOoG,EAAP,KAAmBC,EAAnB,KAsBE,OAlBFrE,qBAAU,WAERnF,IAASnB,OAAO4K,mBAAhB,uCAAoC,WAAOrD,GAAP,SAAAtF,EAAA,uDAClC,OAAKsF,QAAL,IAAKA,OAAL,EAAKA,EAAMnH,MACToD,EAAWgE,GAAMD,EAAKnH,IAAKmH,EAAKhH,cAEhCiD,EAAUD,EAAkBgE,EAAKnH,MAEjCuK,GAAe,IAEfA,GAAe,GAGjBF,GAAY,GAXsB,2CAApC,yDAcC,CAAEjH,EAASiH,EAAYE,IAEnBH,EAED,sDAMC,cAAC,IAAD,UACH,8BAEE,eAAC,IAAD,WACE,cAAC,GAAD,CACAN,gBAAkBQ,EAClBX,KAAK,QACLC,UAAYH,KAEZ,cAAC,GAAD,CACCK,gBAAkBQ,EAClBZ,OAAK,EAACC,KAAK,IACXC,UAAYtB,KAEb,cAAC,IAAD,CAAUM,GAAG,wBC/DV6B,GAAa,WACtB,OACI,cAAC,IAAD,CAAU9J,MAAQA,EAAlB,SACI,cAAC,GAAD,O,OCFZ+J,IAASC,OACL,cAAC,GAAD,IACFhF,SAASiF,eAAe,SAM1BlM,M","file":"static/js/main.2beccb22.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\r\nexport const types = {\r\n    login: '[Auth] login',\r\n    logout: '[Auth] logout',\r\n\r\n    uiSetError: '[UI] Set Error',\r\n    uiRemoveError: '[UI] Remove Error',\r\n\r\n    uiStartLoading: '[UI] Start loading',\r\n    uiFinishLoading: '[UI] Finish loading',\r\n\r\n    notesAddNew: '[Notes] New note',\r\n    notesActive: '[Notes] Set active note',\r\n    notesLoad: '[Notes] Load notes',\r\n    notesUpdated: '[Notes] Update note saved',\r\n    notesFileUrl: '[Notes] Update image url',\r\n    notesDelete: '[Notes] Delete note',\r\n    notesLogoutCleaning: '[Notes] Logout Cleaning',\r\n\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n\r\n}\r\n\r\n\r\nexport const notesReducer = ( state = initialState, action) => {\r\n    \r\n    switch ( action.type ) {\r\n        case types.notesActive:\r\n            return {\r\n                ...state,\r\n                active: {\r\n                    ...action.payload\r\n                }\r\n            }\r\n        \r\n        case types.notesAddNew:\r\n            return {\r\n                ...state,\r\n                notes: [action.payload, ...state.notes]\r\n            }\r\n        case types.notesLoad:\r\n            return {\r\n                ...state,\r\n                notes: [ ...action.payload ]\r\n            }\r\n        \r\n        case types.notesUpdated:\r\n            return {\r\n                ...state,\r\n                notes: state.notes.map(\r\n                    note => note.id === action.payload.id\r\n                    ? action.payload.note\r\n                    :note\r\n                )\r\n            }\r\n        case types.notesDelete:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: state.notes.filter( note => note.id !== action.payload)\r\n            }\r\n            \r\n        case types.notesLogoutCleaning:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: []\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    msError: null\r\n}\r\n\r\nexport const iuReducer = ( state= initialState, action ) =>{\r\n\r\n    switch ( action.type ) {\r\n        case types.uiSetError:\r\n            return {\r\n                ...state,\r\n                msError: action.payload\r\n            }\r\n        case types.uiRemoveError:\r\n            return {\r\n                ...state,\r\n                msError: null\r\n            }\r\n\r\n        case types.uiStartLoading:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n            \r\n        case types.uiFinishLoading:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","\r\nimport {createStore, combineReducers, applyMiddleware} from 'redux'\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { authReducer } from '../reducers/authReducer';\r\nimport { notesReducer } from '../reducers/notesReducer';\r\nimport { iuReducer } from '../reducers/uiReducer';\r\n\r\n\r\nconst compose = null;\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    ui: iuReducer,\r\n    notes: notesReducer\r\n})\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk )  /* Middleware async tareas */\r\n    ) );","import { types } from \"../types/types\";\r\n\r\nexport const authReducer = ( state = {} , action ) => {\r\n    switch ( action.type ) {\r\n        case types.login:\r\n            return {\r\n                uid: action.payload.uid,\r\n                name: action.payload.displayName\r\n            }\r\n        \r\n        case types.logout:\r\n            return {}\r\n        \r\n        default: \r\n            return state;\r\n    }\r\n}","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyC7wcQ_DTGfmkee1M2Vh_FDUDRBlV_vbTg\",\r\n    authDomain: \"react-app-cc2e5.firebaseapp.com\",\r\n    projectId: \"react-app-cc2e5\",\r\n    storageBucket: \"react-app-cc2e5.appspot.com\",\r\n    messagingSenderId: \"156524881274\",\r\n    appId: \"1:156524881274:web:dfe5dd5ced63f91ce5e2c3\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n\r\nconst db = firebase.firestore();\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\n\r\nexport {\r\n    db,\r\n    googleAuthProvider,\r\n    firebase\r\n}","export const fileUpload = async ( file ) => {\r\n    const cloudUrl = ' https://api.cloudinary.com/v1_1/dicn2ueb2/upload';\r\n    const formData =  new FormData();\r\n    formData.append('upload_preset','React-journal');\r\n    formData.append('file',file)\r\n\r\n    try {\r\n        const resp = await fetch( cloudUrl,{\r\n            method: 'POST',\r\n            body: formData\r\n        });\r\n        \r\n        if ( resp.ok ) {\r\n            const cloudResp = await resp.json();\r\n            return cloudResp.secure_url;\r\n        } else {\r\n            return null;\r\n        }\r\n    } catch ( err ) {\r\n        throw err;\r\n    }\r\n} ","import { db } from \"../components/firebase/firebase-config\"\r\n\r\n\r\nexport const loadNotes = async (uid) => {\r\n   const noteSanp = await db.collection(`${ uid }/journal/notes`).get();\r\n\r\n   const notes = [];\r\n\r\n   noteSanp.forEach( snapHijo => {\r\n    notes.push({\r\n        id: snapHijo.id,\r\n        ...snapHijo.data()\r\n    })\r\n })\r\n\r\n   return notes;\r\n}","import Swal from \"sweetalert2\";\r\nimport { fileUpload } from \"../../helpers/fileUpload\";\r\nimport { loadNotes } from \"../../helpers/loadNotes\";\r\nimport { db } from \"../firebase/firebase-config\";\r\nimport { types } from \"../types/types\";\r\n\r\nexport const startNewNote = () => {\r\n    return async( dispatch, getState ) => {\r\n        const uid = getState ().auth.uid;\r\n        \r\n        const newNote = {\r\n            title: '',\r\n            body: '',\r\n            date: new Date().getTime()\r\n        }\r\n\r\n        const doc = await db.collection(`${ uid}/journal/notes`).add( newNote );\r\n           \r\n        dispatch( activeNote(doc.id, newNote));\r\n        dispatch( addNewNote(doc.id, newNote))\r\n    }\r\n}\r\n\r\nexport const activeNote = (id,note) => ({\r\n    type: types.notesActive,\r\n    payload: {\r\n        id,\r\n        ...note\r\n    }\r\n})\r\n\r\nexport const addNewNote = ( id, note ) =>( {\r\n    type: types.notesAddNew,\r\n    payload: {\r\n        id, ...note\r\n    }\r\n})\r\n\r\nexport const startLoadingNotes = ( uid ) => {\r\n    return async ( dispatch ) => {\r\n        const notes = await loadNotes(uid);\r\n        dispatch ( setNotes( notes ) );\r\n    }\r\n}\r\n\r\nexport const setNotes = ( notes ) => ({\r\n    type: types.notesLoad,\r\n    payload: notes\r\n})\r\n\r\nexport const startSaveNote = ( note ) => {\r\n    return async ( dispatch, getState) => {\r\n        const { uid } = getState().auth;\r\n        if ( !note.url ) {\r\n            delete note.url;\r\n        }\r\n        \r\n        const noteToFirestore = { ...note };\r\n        \r\n        delete noteToFirestore.id;\r\n\r\n        await db.doc(`${ uid }/journal/notes/${ note.id }`).update( noteToFirestore );\r\n        \r\n        dispatch(refreshNote( note.id, noteToFirestore));\r\n\r\n        Swal.fire('Saved',note.title,'success');\r\n    }\r\n}\r\n\r\nexport const refreshNote = ( id,note) =>  ({\r\n    type: types.notesUpdated,\r\n    payload: {\r\n        id,\r\n        note: {\r\n            id,\r\n            ...note\r\n        }\r\n    }\r\n})\r\n\r\nexport const startUploading = ( file ) => {\r\n    return async ( dispatch, getState ) => {\r\n        const {active:activeNote} = getState().notes;\r\n        \r\n        Swal.fire({\r\n            title:'Uploading...',\r\n            text: 'Pleas wait...',\r\n            allowOutsideClick: false,\r\n            onBeforeOpen: () => {\r\n                Swal.showLoading();\r\n            }\r\n        });\r\n\r\n        const fileUrl = await fileUpload( file );\r\n        activeNote.url = fileUrl;\r\n        dispatch( startSaveNote( activeNote))\r\n\r\n        Swal.close();\r\n    }\r\n}\r\n\r\nexport const starDeleting = ( id ) => {\r\n    return async ( dispatch, getState ) => {\r\n\r\n        const uid = getState().auth.uid;\r\n        await db.doc(`${ uid }/journal/notes/${ id }`).delete();\r\n\r\n        dispatch( deleteNote( id ) );\r\n    }\r\n}   \r\n\r\nexport const deleteNote = ( id ) =>( {\r\n    type: types.notesDelete,\r\n    payload: id\r\n})\r\n\r\nexport const noteLogout = () => ({\r\n    type: types.notesLogoutCleaning\r\n});","import { useState } from \"react\"\r\n\r\nexport const useForm = (initialState = {}) => {\r\n\r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = ( newformState = initialState ) => {\r\n        setValues( newformState );;\r\n    }\r\n\r\n    const handleInputChange = ({target}) => {\r\n        setValues({\r\n            ...values,\r\n            [target.name]: target.value\r\n        });\r\n    }\r\n\r\n    return [values, handleInputChange,reset];\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { useDispatch } from 'react-redux'\r\nimport { startSaveNote, startUploading } from '../actions/notes';\r\n\r\nexport const NotesAppBar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { active } = useSelector(state => state.notes);\r\n\r\n    const handleSave = () => {\r\n        dispatch( startSaveNote( active ) );\r\n    }\r\n\r\n    const handlePictureClick = () => {\r\n        document.querySelector('#fileSelector').click();\r\n    }\r\n\r\n    const handleFileChange = ( e ) => {\r\n        const file = e.target.files[0];\r\n        if( file ){\r\n            dispatch(startUploading( file ));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"notes__appbar\">\r\n            <span>11 de Agosto de 2021</span>\r\n\r\n            <input type=\"file\"\r\n            id='fileSelector'\r\n            name='file'\r\n            style={{display:'none'}} \r\n            onChange={ handleFileChange }/>\r\n\r\n            <div>\r\n                <button className=\"btn\"\r\n                onClick={ handlePictureClick }>\r\n                    Picture\r\n                </button>\r\n\r\n                <button className=\"btn\"\r\n                onClick={ handleSave }>\r\n                    Save\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useRef } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useSelector } from 'react-redux'\r\nimport { activeNote, starDeleting } from '../actions/notes';\r\nimport { useForm } from '../hooks/useForm';\r\nimport { NotesAppBar } from './NotesAppBar'\r\n\r\nexport const NoteScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { active:note } = useSelector(state => state.notes);\r\n\r\n    const [formValues, handleInputChange, reset] =  useForm( note );\r\n    const { body , title,id } = formValues;\r\n    \r\n    const activeId = useRef( note.id );\r\n    useEffect(() => {\r\n        \r\n        if ( note.id !== activeId.current ){\r\n            reset( note );\r\n            activeId.current = note.id\r\n        }\r\n\r\n    }, [ note, reset ])\r\n\r\n    useEffect(() => {\r\n        \r\n        dispatch( activeNote(formValues.id, { ...formValues }))\r\n\r\n    }, [ formValues , dispatch ]);\r\n\r\n    const handleDelte = () => {\r\n        dispatch( starDeleting( id ));\r\n    }\r\n\r\n    return (\r\n        <div className=\"notes__main-content\">\r\n            \r\n            <NotesAppBar />\r\n\r\n            <div className=\"notes__content\">\r\n                <input type=\"text\"\r\n                placeholder=\"Some awesome title\"\r\n                className=\"notes__title-input\"\r\n                autoComplete=\"off\" \r\n                value={ title }\r\n                onChange={ handleInputChange }\r\n                name=\"title\"/>\r\n\r\n                <textarea\r\n                placeholder=\"What happend today\"\r\n                className=\"notes__textarea\"\r\n                value={ body }\r\n                name=\"body\"\r\n                onChange={ handleInputChange }>\r\n\r\n                </textarea>\r\n\r\n                {\r\n                    ( note.url) \r\n                    &&\r\n                    (<div className=\"notes__image\">\r\n                    <img src={ note.url } alt=\"Perro\" />\r\n                </div>)\r\n                }\r\n            </div>\r\n            <button class=\"btn btn-danger\"\r\n            onClick={ handleDelte }>Delete</button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const NothingSelected = () => {\r\n    return (\r\n        <div className=\"nothing__main-content\">\r\n            <p>\r\n                Select something \r\n                <br />\r\n                or create an entry!\r\n            </p>\r\n\r\n            <i className=\"far fa-star fa-4x mt-5\"></i>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\"\r\n\r\nexport const setError = ( err ) => ({\r\n    type: types.uiSetError,\r\n    payload: err\r\n});\r\n\r\nexport const removeError = () => ( {\r\n    type: types.uiRemoveError\r\n})\r\n\r\nexport const startLoading = () => ({\r\n    type: types.uiStartLoading\r\n})\r\nexport const finishLoading = () => ({\r\n    type: types.uiFinishLoading\r\n})","import { types } from \"../types/types\"\r\nimport { firebase, googleAuthProvider } from '../firebase/firebase-config';\r\nimport { startLoading, finishLoading } from './ui';\r\nimport Swal from 'sweetalert2'\r\nimport { noteLogout } from \"./notes\";\r\n\r\nexport const startLoginEmailPassword = ( email, password ) => {\r\n    return  ( dispatch ) => {\r\n\r\n        dispatch( startLoading() );\r\n\r\n        firebase.auth().signInWithEmailAndPassword(email, password).then(( { user }) => {\r\n            dispatch(\r\n                login(user.uid, user.displayName)\r\n            );\r\n\r\n            dispatch( finishLoading() );\r\n    })\r\n    .catch( e => {\r\n        dispatch( finishLoading() );\r\n        Swal.fire('Error', e.message,'error');\r\n    })\r\n}}\r\n\r\nexport const startRegisterWithEmailPasswordName = ( email, password, name) => {\r\n    return ( dispatch) => {\r\n        firebase.auth().createUserWithEmailAndPassword( email, password).then(async ({user}) => {\r\n            await user.updateProfile({ displayName: name})\r\n            console.log(user);\r\n            dispatch(\r\n                login(user.uid, user.displayName)\r\n            )\r\n        })\r\n        .catch( e => {\r\n            Swal.fire('Error', e.message,'error');\r\n\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const startGoogleLogin = () =>{\r\n    return ( dispatch ) => {\r\n\r\n        firebase.auth().signInWithPopup( googleAuthProvider )\r\n        .then( ({user}) => {\r\n            dispatch(\r\n                login(user.uid, user.displayName)\r\n            )\r\n        });\r\n    }\r\n}\r\n\r\nexport const login = (uid, displayName) => ({\r\n        type: types.login,\r\n        payload: {\r\n            uid,\r\n            displayName\r\n        }\r\n    \r\n})\r\n\r\nexport const startLogout = () => {\r\n    return async( dispatch ) => {\r\n        await firebase.auth().signOut();\r\n\r\n        dispatch( logout() );\r\n        dispatch (noteLogout() );\r\n    }\r\n}\r\n\r\nexport const logout = () => ({\r\n    type: types.logout\r\n})\r\n","import React from 'react'\r\nimport moment from 'moment';\r\nimport { useDispatch } from 'react-redux';\r\nimport { activeNote } from '../actions/notes';\r\n\r\nexport const JournalEntry = ({id,date,title,body,url}) => {\r\n\r\n    const noteDate = moment(date);\r\n    const dispatch = useDispatch();\r\n\r\n    const handlEntryClick = () => {\r\n        dispatch( activeNote(id,{\r\n            date,title,body,url\r\n        }));\r\n    }\r\n    \r\n    return (\r\n        <div className=\"journal__entry pointer\"\r\n        onClick= { handlEntryClick }>\r\n            {\r\n                url &&\r\n                <div className=\"journal__entry-picture\"\r\n                    style={{\r\n                    backgroundSize:'cover',\r\n                    backgroundImage: `url(${ url })`\r\n                    }}>\r\n                </div>\r\n            \r\n            }\r\n\r\n            <div className=\"journal__entry-body\">\r\n                <p className=\"journal_entry-title\">\r\n                    { title }\r\n                </p>\r\n                <p className=\"journal_entry-content\">\r\n                    { body }\r\n                </p>\r\n            </div>\r\n\r\n            <div className=\"journal__entry-date-box\">\r\n                <span>{ noteDate.format('dddd') }</span>\r\n                <h4>{ noteDate.format('Do') }</h4>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { JournalEntry } from './JournalEntry';\r\n\r\nexport const JournalEntries = () => {\r\n\r\n    const { notes } = useSelector(state => state.notes);\r\n    \r\n\r\n    return (\r\n        <div className=\"journal__entries\">\r\n            {   \r\n              \r\n                notes.map( note => (\r\n                    <JournalEntry \r\n                    key= { note.id } \r\n                    {...note} \r\n                    />\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../actions/auth';\r\nimport { startNewNote } from '../actions/notes';\r\nimport { JournalEntries } from './JournalEntries'\r\n\r\nexport const Sidebar = () => {\r\n\r\n\r\n    const dispatch = useDispatch();\r\n    const { name } = useSelector(state => state.auth)\r\n\r\n    const handleLogout = () => {\r\n        dispatch( startLogout() )\r\n        \r\n    }\r\n\r\n    const handleAddNew = () => {\r\n        dispatch( startNewNote());    \r\n    }\r\n\r\n    return (\r\n        <aside className=\"journal__sidebar\">\r\n            <div className=\"jorunal__sidebar-navbar\">\r\n                <h3 className=\"mt-5\">\r\n                    <i className=\"far fa-moon\"></i>\r\n                    <span> { name } </span>\r\n                </h3>\r\n\r\n                <button className=\"btn\"\r\n                onClick={ handleLogout }>\r\n                    LogOut\r\n                </button>\r\n            </div>\r\n\r\n            <div className=\"journal__new-entry\"\r\n            onClick={ handleAddNew }>\r\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\r\n                <p className=\"mt-5\">New entry</p>\r\n            </div>\r\n\r\n            <JournalEntries />\r\n            \r\n        </aside>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { NoteScreen } from '../notes/NoteScreen'\r\nimport { NothingSelected } from './NothingSelected'\r\nimport { Sidebar } from './Sidebar'\r\n\r\nexport const JournalScreen = () => {\r\n\r\n    const { active } = useSelector(state => state.notes)\r\n\r\n\r\n    return (\r\n        <div className=\"journal__main-content animate__animated animate__fadeIn animate__faster\">\r\n            <Sidebar/>\r\n\r\n            <main>\r\n                {\r\n                    ( active )\r\n                    ? (  <NoteScreen /> )\r\n                    : ( <NothingSelected /> )\r\n                }\r\n\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { startGoogleLogin, startLoginEmailPassword } from \"../actions/auth\";\r\nimport { useForm } from \"../hooks/useForm\";\r\n\r\nexport const LoginScreen = () => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const { loading } = useSelector( state => state.ui );\r\n\r\n  const [ formValues, handleInputChange ] = useForm({\r\n    email: 'juan@gamil.com',\r\n    password: '123456'\r\n  })\r\n\r\n  const { email, password } = formValues;\r\n\r\n  const handleLogin = ( e ) => {\r\n    e.preventDefault();\r\n    dispatch( startLoginEmailPassword(email,password) )\r\n  }\r\n\r\n  const handleGoogleLogin = () => {\r\n    dispatch( startGoogleLogin() );\r\n  }\r\n\r\n  return ( \r\n    <>\r\n      <h3 className=\"auth__title\">Login</h3>\r\n      <form onSubmit= { handleLogin } \r\n      className=\"animate__animated animate__fadeIn animate__faster\">\r\n        <input type=\"text\" placeholder=\"Email\" name=\"email\" className=\"auth__input\" autoComplete=\"off\"\r\n        value={ email }\r\n        onChange={ handleInputChange }/>\r\n\r\n        <input type=\"password\" placeholder=\"Password\" name=\"password\" className=\"auth__input\"\r\n        autoComplete=\"off\"\r\n        value={ password }\r\n        onChange={ handleInputChange }/>\r\n\r\n        <button type=\"submit\" className=\"btn btn-primary btn-block\" disabled={ loading }>Login</button>\r\n\r\n      \r\n        <div className=\"auth__social-networks\">\r\n          <p>Login with social networks</p>\r\n          <div className=\"google-btn\" onClick={ handleGoogleLogin }>\r\n            <div className=\"google-icon-wrapper\">\r\n              <img\r\n                className=\"google-icon\"\r\n                src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\"\r\n                alt=\"google button\"\r\n              />\r\n            </div>\r\n            <p className=\"btn-text\">\r\n              <b>Sign in with google</b>\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        <Link\r\n        to='/auth/register'\r\n        className=\"link\">\r\n            Create new account\r\n        </Link>\r\n\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useForm } from '../hooks/useForm'\r\nimport validator from 'validator';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { removeError, setError } from '../actions/ui';\r\nimport { startRegisterWithEmailPasswordName } from '../actions/auth';\r\n\r\n\r\n\r\nexport const RegisterScreen = () => {\r\n  \r\n  const dispatch = useDispatch();\r\n  const { msError } = useSelector( state => state.ui );\r\n\r\n\r\n  const [ formValues,handleInputChange  ] = useForm({\r\n    name: 'Juan',\r\n    email: 'juan@gamil.com',\r\n    password: '123456',\r\n    password2: '123456'\r\n  });\r\n\r\n  const { name, email, password, password2 } = formValues;\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if ( isFormValid()) {\r\n      dispatch(startRegisterWithEmailPasswordName(email, password, name));\r\n    }\r\n  }\r\n\r\n  const isFormValid = () => {\r\n\r\n    if ( name.trim().length === 0 ) {\r\n      dispatch( setError('Nombre no valido') );\r\n      return false;\r\n    } else if ( !validator.isEmail( email ) ) {\r\n        dispatch( setError('Email no valido') );\r\n        return false;\r\n    } else if (password !== password2 || password.length < 5) {\r\n      dispatch( setError('Passoword debe tener 6 o mas caracteres') );\r\n      return false;\r\n    }\r\n    dispatch( removeError());\r\n    return true;\r\n  }\r\n\r\n    return (\r\n        <>\r\n      <h3 className=\"auth__title\">Register</h3>\r\n      <form onSubmit={ handleSubmit }\r\n       className=\"animate__animated animate__fadeIn animate__faster\">\r\n        {\r\n          msError &&\r\n          (<div className=\"auth__alert-error\">\r\n           {msError}\r\n          </div>)\r\n\r\n        }\r\n\r\n        <input type=\"text\" placeholder=\"Name\" name=\"name\" className=\"auth__input\" autoComplete=\"off\" value={ name } onChange={ handleInputChange }/>\r\n\r\n        <input type=\"text\" placeholder=\"Email\" name=\"email\" className=\"auth__input\" autoComplete=\"off\" value={ email } onChange={ handleInputChange }/>\r\n\r\n        <input type=\"password\" placeholder=\"Password\" name=\"password\" className=\"auth__input\"\r\n        autoComplete=\"off\" value={ password } onChange={ handleInputChange }/>\r\n        \r\n        <input type=\"password\" placeholder=\"Confirm\" name=\"password2\" className=\"auth__input\"\r\n        autoComplete=\"off\" value={ password2 } onChange={ handleInputChange }/>\r\n\r\n        <button type=\"submit\" className=\"btn btn-primary btn-block mb-5\" disabled={ false }>Register</button>\r\n\r\n      \r\n\r\n        <Link\r\n        to='/auth/login'\r\n        className=\"link\">\r\n            Already Register\r\n        </Link>\r\n\r\n      </form>\r\n    </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Switch,Route, Redirect } from 'react-router'\r\nimport { LoginScreen } from '../components/auth/LoginScreen'\r\nimport { RegisterScreen } from '../components/auth/RegisterScreen'\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n        <div className=\"auth__main\">\r\n            <div className=\"auth__box-container\">\r\n                <Switch>\r\n                    <Route exact path='/auth/login' component={ LoginScreen}/>\r\n                    <Route exact path='/auth/register' component={ RegisterScreen}/>\r\n\r\n                <Redirect to='/auth/login'/>\r\n             </Switch>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Redirect, Route } from 'react-router'\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n\r\n    return (\r\n        <Route { ...rest }\r\n            component= { ( props ) => (\r\n                ( isAuthenticated)\r\n                    ? (<Component  { ...props } />)\r\n                    : ( <Redirect to=\"/auth/login\" />)\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Redirect, Route } from 'react-router'\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route { ...rest }\r\n        component= { ( props ) => (\r\n            ( isAuthenticated)\r\n            ? ( <Redirect to=\"/\" />)\r\n            : (<Component  { ...props } />)\r\n        )}\r\n    />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React, { useEffect, useState } from 'react'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect\r\n  } from \"react-router-dom\";\r\n\r\nimport { useDispatch } from 'react-redux'\r\n\r\n\r\n\r\nimport {firebase} from '../components/firebase/firebase-config'\r\nimport { JournalScreen } from '../components/journal/JournalScreen';\r\nimport { AuthRouter } from './AuthRouter';\r\nimport { login } from '../components/actions/auth';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\nimport { startLoadingNotes } from '../components/actions/notes';\r\n\r\nexport const AppRouter = () => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [checking, setChecking] = useState(true);\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n  \r\n\r\n  useEffect(() => {\r\n\r\n    firebase.auth().onAuthStateChanged( async (user) => {\r\n      if ( user?.uid) {\r\n        dispatch ( login(user.uid, user.displayName ));\r\n\r\n        dispatch( startLoadingNotes(user.uid) ); \r\n\r\n        setIsLoggedIn( true);\r\n      } else {\r\n        setIsLoggedIn( false )\r\n      }\r\n      \r\n      setChecking(false);\r\n\r\n    })\r\n  }, [ dispatch,setChecking,setIsLoggedIn ])\r\n\r\n    if ( checking ) {\r\n      return ( \r\n        <h1>Espere Por favor....</h1>\r\n      )\r\n    }\r\n\r\n\r\n    return (\r\n         <Router>\r\n      <div>\r\n\r\n        <Switch>\r\n          <PublicRoute \r\n          isAuthenticated={ isLoggedIn  }\r\n          path='/auth' \r\n          component={ AuthRouter }/>\r\n          \r\n          <PrivateRoute\r\n           isAuthenticated={ isLoggedIn  }\r\n           exact path='/' \r\n           component={ JournalScreen } />\r\n\r\n          <Redirect to='/auth/login'/>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {Provider } from 'react-redux';\r\nimport { store } from './components/store/store';\r\nimport { AppRouter } from './routers/AppRouter'\r\n\r\nexport const JournalApp = () => {\r\n    return (\r\n        <Provider store={ store }>\r\n            <AppRouter/>\r\n        </Provider>\r\n        \r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport { JournalApp } from './JournalApp';\nimport './styles/styles.scss';\n\nReactDOM.render(\n    <JournalApp />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}